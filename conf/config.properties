port = 8300
grid.mcp.address = yacy-mcp:8100
grid.ftp.address = nfsroot:9hnHcmkhssiP@vsftpd.yacy-grid.svc.cluster.local:21
grid.broker.address = adminRabbitMQ:CxMLzJnuDm8NEqD3fvzdMUnGWfFv732z@rabbitmq:5672
grid.broker.lazy = true
grid.assets.delete = true

# The blacklist is choosen with the attribute grid.crawler.blacklist which gives the file name(s) of the blacklist(s) to be used.
# To use your own blacklist, create a file in data/crawler-8300/conf/ and set the name of it
# in the attribute grid.crawler.blacklist.
#
# You can use several blacklists simultanously, just comma-separate the names of the file names.
# all files in the path conf/ and data/crawler-8300/conf/ are found.
# The same applies to files in parallel processes like data/crawler-8301/conf/ and so on.
#
# The file format of the blacklist is:
# - it is a plain text file in UTF-8 encoding
# - every line beginning with '#' is a comment and is ignored
# - every string, matching with ' #.*' is removed. This cuts away comments from the end of a line.
# - every blank line is ignored
# - every other line must contain a regular expression according to
#   https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html
#   which is considered as a matcher pattern (not a find pattern) for an URL.
#   Lines containing a regular expression get their leading and trailing spaces removed.
#
# All regular expressions are considered to be a disjunction (OR logic) for the filtering of cralwing urls.
# URLs are normalized before a matching is attempted, that means they are encoded propery
# and the fragment identifier is removed from the end of the URL.
grid.crawler.blacklist = crawler_blacklist_someonewhocares.txt,crawler_blacklist_localhost.txt,crawler_blacklist_vsm.txt
grid.indexer.blacklist = indexer_blacklist_filetypes.txt
grid.indexer.priorityQueues = 2
loaderHeadless = false


# the grid name is used to separate different grid networks.
# Only networks with the same name connect with each other
grid.name = vsm_yacy-grid

# the address of the elasticsearch transport client instance(s)
grid.elasticsearch.address = 10.0.0.61:9300,10.0.0.62:9300,10.0.0.63:9300
grid.elasticsearch.clusterName = es-live

grid.elasticsearch.webIndexName = web

# limitation and throttling:
# A limit is the maximum number of entries that a queue may take. This is a configuration which is passed to
# the RabbitMQ queue initialization. If the limit is set to 0, it means no limitation.
# In case that a target queue reaches it's maximum, it will reject new entries, followed by a requeueing of already dequeued messages
# of origin queues.
grid.broker.queue.limit = 50000
# A throttling is a care-taking of the maximum number of entries in target queues. If the sum of all entries in target queues
# is approaching the throttling number, reading from the origin queues is throttled (= pauses are made, processes act slower).
# Queue limit numbers cannot be compared with trottling numbers, because queue limits denote absolute numbers of one queue
# while throttling numbers denote the sum of all entries in target queues. It should hold:
#     throttling < limit * number-of-target-queues
# But as long as throttling >= limit it could happen that a queue reaches it's limit before throttling starts. To be save, set
#     throttling < limit
# A throttling of 0 means no throttling.
grid.broker.queue.throttling = 48000
